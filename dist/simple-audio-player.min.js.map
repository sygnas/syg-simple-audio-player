{"version":3,"file":"simple-audio-player.min.js","sources":["../src/index.js"],"sourcesContent":["/**\r\n * オーディオ再生・停止だけを管理するボタン\r\n *\r\n * @author   Hiroshi Fukuda <info.sygnas@gmail.com>\r\n * @license  MIT\r\n */\r\n\r\nimport AudioSrc from '@sygnas/audio-src';\r\n\r\n\r\nexport default class {\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Object} config インスタンス設定。this.defaults 参照\r\n   */\r\n  constructor(target, audio, config) {\r\n    // ターゲットボタンの data-audio-status属性に入れる状態\r\n    this.STATE_PLAY = 'play';\r\n    this.STATE_PAUSE = 'pause';\r\n    this.STATE_STOP = 'stop';\r\n\r\n    // デフォルト設定\r\n    const defaults = {\r\n      // オーディオソースを指定する属性\r\n      attr_src: 'data-audio-src',\r\n      // 状態を格納する属性\r\n      attr_status: 'data-audio-status',\r\n      // ソースのタイプを指定する属性 {file / hds / hls / mse}\r\n      attr_type: 'data-audio-type',\r\n\r\n      // 以下、syg-audio-src の設定\r\n      hds: {\r\n        protcol: 'http://',\r\n        playlist: '/manifest.f4m',\r\n      },\r\n      hls: {\r\n        protcol: 'http://',\r\n        playlist: '/playlist.m3u8',\r\n      },\r\n      mse: {\r\n        protcol: 'http://',\r\n        playlist: '/manifest.mpd',\r\n        autoplay: false,\r\n      },\r\n    };\r\n    // 設定反映\r\n    this.opt = Object.assign(defaults, config);\r\n\r\n    // 再生中か\r\n    this.is_playing = false;\r\n    // 現在再生中のボタンエレメント\r\n    this.now_playing_btn = null;\r\n    // ボタンエレメント\r\n    this.targets = document.querySelectorAll(target);\r\n    // オーディオソース\r\n    this.audio_src = new AudioSrc({\r\n      hds: this.opt.hds,\r\n      hls: this.opt.hls,\r\n      mse: this.opt.mse,\r\n    });\r\n    // イベント設定\r\n    this.$_init_event();\r\n  }\r\n\r\n  /**\r\n   * 停止\r\n   */\r\n  stop() {\r\n    this.$_stop();\r\n  }\r\n\r\n\r\n  /**\r\n   * private\r\n   */\r\n\r\n  /**\r\n   * イベント設定\r\n   */\r\n  $_init_event() {\r\n    // ボタンのイベント\r\n    get_node_array(this.targets).forEach((elm) => {\r\n      elm.addEventListener('click', this.$_on_btn_click.bind(this));\r\n    });\r\n    // 再生終了イベント\r\n    this.audio_src.audio.addEventListener('ended', this.$_stop.bind(this));\r\n  }\r\n\r\n  /**\r\n   * ボタンをクリックした\r\n   * @param {Event} ev クリックイベント\r\n   */\r\n  $_on_btn_click(ev) {\r\n    ev.preventDefault();\r\n\r\n    // now_playing_btn とクリックされたボタンが同一なら一時停止\r\n    if (ev.target === this.now_playing_btn) {\r\n      this.$_pause(ev.target);\r\n    } else {\r\n      this.$_play_new(ev.target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 停止\r\n   */\r\n  $_stop() {\r\n    this.audio_src.audio.pause();\r\n    this.audio_src.audio.currentTime = 0;\r\n    // ステータスを変更\r\n    this.$_change_state(this.STATE_STOP, this.now_playing_btn);\r\n    // 再生中ボタンの変更\r\n    this.now_playing_btn = null;\r\n  }\r\n\r\n  /**\r\n   * 一時停止・再開\r\n   * @param {HTMLElement} target クリックしたボタン\r\n   */\r\n  $_pause(target) {\r\n    if (this.is_playing) {\r\n      this.audio_src.audio.pause();\r\n      this.$_change_state(this.STATE_PAUSE, target);\r\n    } else {\r\n      this.audio_src.audio.play();\r\n      this.$_change_state(this.STATE_PLAY, target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 再生\r\n   * @param {HTMLElement} target クリックしたボタン\r\n   */\r\n  $_play_new(target) {\r\n    const opt = this.opt;\r\n    const audio_src = this.audio_src;\r\n\r\n    // 既に再生していたら止める\r\n    if (this.now_playing_btn) {\r\n      audio_src.audio.pause();\r\n      this.$_change_state(this.STATE_STOP, this.now_playing_btn);\r\n    }\r\n\r\n    // オーディオソースURL\r\n    const url = target.getAttribute(opt.attr_src);\r\n    // ソースタイプ\r\n    const type = target.getAttribute(opt.attr_type);\r\n\r\n    // ・data-audio-type属性が file だったら非ストリーミング\r\n    // ・上記属性が null で、サポート環境チェックが問題なければ\r\n    //   ストリーミング種別自動判定\r\n    // ・hds / hls / mse を指定したストリーミング\r\n    // ・それ以外はエラー\r\n    if (type === audio_src.TYPE_FILE) {\r\n      audio_src.set_src(url, audio_src.TYPE_FILE);\r\n    } else if (type === null && this.audio_src.check_support()) {\r\n      audio_src.set_src(url);\r\n    } else if (\r\n      type === audio_src.TYPE_HDS ||\r\n      type === audio_src.TYPE_HLS ||\r\n      type === audio_src.TYPE_MSE) {\r\n      audio_src.set_src(url, type);\r\n    } else {\r\n      const err = new Error();\r\n      err.message = 'not supported type.';\r\n      throw err;\r\n    }\r\n\r\n    // ソースをロードして再生\r\n    audio_src.audio.load();\r\n    audio_src.audio.play();\r\n\r\n    // 再生中ボタンの変更\r\n    this.now_playing_btn = target;\r\n    // ステータスを変更\r\n    this.$_change_state(this.STATE_PLAY, target);\r\n  }\r\n\r\n  /**\r\n   * 任意のエレメントのステータスを変更\r\n   * @param {String} state ステータス。this.STATE_PLAY などが入る\r\n   * @param {HTMLElement} elm 対象となるボタン\r\n   */\r\n  $_change_state(state, elm) {\r\n    if (state === this.STATE_PLAY) {\r\n      this.is_playing = true;\r\n    } else if (state === this.STATE_PAUSE || state === this.STATE_STOP) {\r\n      this.is_playing = false;\r\n    }\r\n\r\n    if (elm) {\r\n      elm.setAttribute(this.opt.attr_status, state);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * NodeListをArrayとして取り出す（IE対策）\r\n */\r\nfunction get_node_array(node_list) {\r\n  return Array.prototype.slice.call(node_list, 0);\r\n}\r\n"],"names":["target","audio","config","STATE_PLAY","STATE_PAUSE","STATE_STOP","opt","Object","assign","is_playing","now_playing_btn","targets","document","querySelectorAll","audio_src","AudioSrc","this","hds","hls","mse","$_init_event","$_stop","node_list","Array","prototype","slice","call","forEach","elm","addEventListener","_this","$_on_btn_click","bind","ev","preventDefault","$_pause","$_play_new","pause","currentTime","$_change_state","play","url","getAttribute","attr_src","type","attr_type","TYPE_FILE","set_src","check_support","TYPE_HDS","TYPE_HLS","TYPE_MSE","err","Error","message","load","state","setAttribute","attr_status"],"mappings":"skBAecA,EAAQC,EAAOC,8GAEpBC,WAAa,YACbC,YAAc,aACdC,WAAa,YA2BbC,IAAMC,OAAOC,iBAtBN,6BAEG,8BAEF,+BAIA,mBACC,8BAGD,mBACC,+BAGD,mBACC,0BACA,IAIqBN,QAG9BO,YAAa,OAEbC,gBAAkB,UAElBC,QAAUC,SAASC,iBAAiBb,QAEpCc,UAAY,IAAIC,OACdC,KAAKV,IAAIW,QACTD,KAAKV,IAAIY,QACTF,KAAKV,IAAIa,WAGXC,6DAOAC,4DAgIT,SAGwBC,UACfC,MAAMC,UAAUC,MAAMC,KAAKJ,EAAW,KAvH5BN,KAAKL,SAASgB,QAAQ,SAACC,KAChCC,iBAAiB,QAASC,EAAKC,eAAeC,gBAG/ClB,UAAUb,MAAM4B,iBAAiB,QAASb,KAAKK,OAAOW,KAAKhB,8CAOnDiB,KACVC,iBAGCD,EAAGjC,SAAWgB,KAAKN,qBAChByB,QAAQF,EAAGjC,aAEXoC,WAAWH,EAAGjC,8CAQhBc,UAAUb,MAAMoC,aAChBvB,UAAUb,MAAMqC,YAAc,OAE9BC,eAAevB,KAAKX,WAAYW,KAAKN,sBAErCA,gBAAkB,qCAOjBV,GACFgB,KAAKP,iBACFK,UAAUb,MAAMoC,aAChBE,eAAevB,KAAKZ,YAAaJ,UAEjCc,UAAUb,MAAMuC,YAChBD,eAAevB,KAAKb,WAAYH,uCAQ9BA,OACHM,EAAMU,KAAKV,IACXQ,EAAYE,KAAKF,UAGnBE,KAAKN,oBACGT,MAAMoC,aACXE,eAAevB,KAAKX,WAAYW,KAAKN,sBAItC+B,EAAMzC,EAAO0C,aAAapC,EAAIqC,UAE9BC,EAAO5C,EAAO0C,aAAapC,EAAIuC,cAOjCD,IAAS9B,EAAUgC,YACXC,QAAQN,EAAK3B,EAAUgC,gBAC5B,GAAa,OAATF,GAAiB5B,KAAKF,UAAUkC,kBAC/BD,QAAQN,OACb,CAAA,GACLG,IAAS9B,EAAUmC,UACnBL,IAAS9B,EAAUoC,UACnBN,IAAS9B,EAAUqC,SAEd,KACCC,EAAM,IAAIC,cACZC,QAAU,sBACRF,IAJIL,QAAQN,EAAKG,KAQf3C,MAAMsD,SACNtD,MAAMuC,YAGX9B,gBAAkBV,OAElBuC,eAAevB,KAAKb,WAAYH,0CAQxBwD,EAAO5B,GAChB4B,IAAUxC,KAAKb,gBACZM,YAAa,EACT+C,IAAUxC,KAAKZ,aAAeoD,IAAUxC,KAAKX,kBACjDI,YAAa,GAGhBmB,KACE6B,aAAazC,KAAKV,IAAIoD,YAAaF"}