{"version":3,"file":"simple-audio-player.js","sources":["../src/index.js"],"sourcesContent":["/**\r\n * オーディオ再生・停止だけを管理するボタン\r\n *\r\n * @author   Hiroshi Fukuda <info.sygnas@gmail.com>\r\n * @license  MIT\r\n */\r\n\r\nimport AudioSrc from '@sygnas/audio-src';\r\n\r\n\r\nexport default class {\r\n  /**\r\n   * コンストラクタ\r\n   * @param {Object} config インスタンス設定。this.defaults 参照\r\n   */\r\n  constructor(target, audio, config) {\r\n    // ターゲットボタンの data-audio-status属性に入れる状態\r\n    this.STATE_PLAY = 'play';\r\n    this.STATE_PAUSE = 'pause';\r\n    this.STATE_STOP = 'stop';\r\n\r\n    // デフォルト設定\r\n    const defaults = {\r\n      // オーディオソースを指定する属性\r\n      attr_src: 'data-audio-src',\r\n      // 状態を格納する属性\r\n      attr_status: 'data-audio-status',\r\n      // ソースのタイプを指定する属性 {file / hds / hls / mse}\r\n      attr_type: 'data-audio-type',\r\n\r\n      // 以下、syg-audio-src の設定\r\n      hds: {\r\n        protcol: 'http://',\r\n        playlist: '/manifest.f4m',\r\n      },\r\n      hls: {\r\n        protcol: 'http://',\r\n        playlist: '/playlist.m3u8',\r\n      },\r\n      mse: {\r\n        protcol: 'http://',\r\n        playlist: '/manifest.mpd',\r\n        autoplay: false,\r\n      },\r\n    };\r\n    // 設定反映\r\n    this.opt = Object.assign(defaults, config);\r\n\r\n    // 再生中か\r\n    this.is_playing = false;\r\n    // 現在再生中のボタンエレメント\r\n    this.now_playing_btn = null;\r\n    // ボタンエレメント\r\n    this.targets = document.querySelectorAll(target);\r\n    // オーディオソース\r\n    this.audio_src = new AudioSrc({\r\n      hds: this.opt.hds,\r\n      hls: this.opt.hls,\r\n      mse: this.opt.mse,\r\n    });\r\n    // イベント設定\r\n    this.$_init_event();\r\n  }\r\n\r\n  /**\r\n   * 停止\r\n   */\r\n  stop() {\r\n    this.$_stop();\r\n  }\r\n\r\n\r\n  /**\r\n   * private\r\n   */\r\n\r\n  /**\r\n   * イベント設定\r\n   */\r\n  $_init_event() {\r\n    // ボタンのイベント\r\n    get_node_array(this.targets).forEach((elm) => {\r\n      elm.addEventListener('click', this.$_on_btn_click.bind(this));\r\n    });\r\n    // 再生終了イベント\r\n    this.audio_src.audio.addEventListener('ended', this.$_stop.bind(this));\r\n  }\r\n\r\n  /**\r\n   * ボタンをクリックした\r\n   * @param {Event} ev クリックイベント\r\n   */\r\n  $_on_btn_click(ev) {\r\n    ev.preventDefault();\r\n\r\n    // now_playing_btn とクリックされたボタンが同一なら一時停止\r\n    if (ev.target === this.now_playing_btn) {\r\n      this.$_pause(ev.target);\r\n    } else {\r\n      this.$_play_new(ev.target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 停止\r\n   */\r\n  $_stop() {\r\n    this.audio_src.audio.pause();\r\n    this.audio_src.audio.currentTime = 0;\r\n    // ステータスを変更\r\n    this.$_change_state(this.STATE_STOP, this.now_playing_btn);\r\n    // 再生中ボタンの変更\r\n    this.now_playing_btn = null;\r\n  }\r\n\r\n  /**\r\n   * 一時停止・再開\r\n   * @param {HTMLElement} target クリックしたボタン\r\n   */\r\n  $_pause(target) {\r\n    if (this.is_playing) {\r\n      this.audio_src.audio.pause();\r\n      this.$_change_state(this.STATE_PAUSE, target);\r\n    } else {\r\n      this.audio_src.audio.play();\r\n      this.$_change_state(this.STATE_PLAY, target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 再生\r\n   * @param {HTMLElement} target クリックしたボタン\r\n   */\r\n  $_play_new(target) {\r\n    const opt = this.opt;\r\n    const audio_src = this.audio_src;\r\n\r\n    // 既に再生していたら止める\r\n    if (this.now_playing_btn) {\r\n      audio_src.audio.pause();\r\n      this.$_change_state(this.STATE_STOP, this.now_playing_btn);\r\n    }\r\n\r\n    // オーディオソースURL\r\n    const url = target.getAttribute(opt.attr_src);\r\n    // ソースタイプ\r\n    const type = target.getAttribute(opt.attr_type);\r\n\r\n    // ・data-audio-type属性が file だったら非ストリーミング\r\n    // ・上記属性が null で、サポート環境チェックが問題なければ\r\n    //   ストリーミング種別自動判定\r\n    // ・hds / hls / mse を指定したストリーミング\r\n    // ・それ以外はエラー\r\n    if (type === audio_src.TYPE_FILE) {\r\n      audio_src.set_src(url, audio_src.TYPE_FILE);\r\n    } else if (type === null && this.audio_src.check_support()) {\r\n      audio_src.set_src(url);\r\n    } else if (\r\n      type === audio_src.TYPE_HDS ||\r\n      type === audio_src.TYPE_HLS ||\r\n      type === audio_src.TYPE_MSE) {\r\n      audio_src.set_src(url, type);\r\n    } else {\r\n      const err = new Error();\r\n      err.message = 'not supported type.';\r\n      throw err;\r\n    }\r\n\r\n    // ソースをロードして再生\r\n    audio_src.audio.load();\r\n    audio_src.audio.play();\r\n\r\n    // 再生中ボタンの変更\r\n    this.now_playing_btn = target;\r\n    // ステータスを変更\r\n    this.$_change_state(this.STATE_PLAY, target);\r\n  }\r\n\r\n  /**\r\n   * 任意のエレメントのステータスを変更\r\n   * @param {String} state ステータス。this.STATE_PLAY などが入る\r\n   * @param {HTMLElement} elm 対象となるボタン\r\n   */\r\n  $_change_state(state, elm) {\r\n    if (state === this.STATE_PLAY) {\r\n      this.is_playing = true;\r\n    } else if (state === this.STATE_PAUSE || state === this.STATE_STOP) {\r\n      this.is_playing = false;\r\n    }\r\n\r\n    if (elm) {\r\n      elm.setAttribute(this.opt.attr_status, state);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * NodeListをArrayとして取り出す（IE対策）\r\n */\r\nfunction get_node_array(node_list) {\r\n  return Array.prototype.slice.call(node_list, 0);\r\n}\r\n"],"names":["target","audio","config","STATE_PLAY","STATE_PAUSE","STATE_STOP","defaults","opt","Object","assign","is_playing","now_playing_btn","targets","document","querySelectorAll","audio_src","AudioSrc","hds","hls","mse","$_init_event","$_stop","forEach","elm","addEventListener","$_on_btn_click","bind","ev","preventDefault","$_pause","$_play_new","pause","currentTime","$_change_state","play","url","getAttribute","attr_src","type","attr_type","TYPE_FILE","set_src","check_support","TYPE_HDS","TYPE_HLS","TYPE_MSE","err","Error","message","load","state","setAttribute","attr_status","get_node_array","node_list","Array","prototype","slice","call"],"mappings":"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"}